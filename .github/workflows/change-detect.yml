name: Change detection

on:
  pull_request:
  push:
    branches:
      - main
      - release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.head_ref ||  github.run_id }}
  cancel-in-progress: true

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-20.04
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      streaming-server: ${{ steps.filter.outputs.streaming-server }}
      rust-server: ${{ steps.filter.outputs.rust-server }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 20
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            rust-server:
              - 'backend/src/**'
            frontend:
              - 'frontend/**'
            prediction-server:
              - 'backend/prediction/**'
            streaming-server:
              - 'backend/streaming/**'
            data:
              - 'Data/**'
              - 'archive/**'
            test:
              - 'test/**'
          token: ${{ secrets.ACTION_TOKEN }}

  frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend== 'true' }}
    uses: ./.github/workflows/frontend.yml

  cd-streaming-server:
    needs: changes
    if: ${{ needs.changes.outputs.streaming-server== 'true' && github.ref == 'refs/heads/main' }}
    uses: ./.github/workflows/deployment.yml
    with:
      DOCKER_IMAGE_NAME: streaming-server
      CONTAINER_NAME: streaming
      working-directory: backend/streaming
    secrets:
      HOST_SERVER: ${{ secrets.STREAMING_SERVER_HOST }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
      PASSPHRASE: ${{ secrets.PASSPHRASE }}

  ci-rust-server:
    needs: changes
    if: ${{ needs.changes.outputs.rust-server== 'true' }}
    uses: ./.github/workflows/rust-server.yml

  cd-rust-server:
    needs: ci-rust-server
    if: github.ref == 'refs/heads/main'
    uses: ./.github/workflows/deployment.yml
    with:
      DOCKER_IMAGE_NAME: api-server
      CONTAINER_NAME: api-server
      working-directory: backend
    secrets:
      HOST_SERVER: ${{ secrets.API_SERVER_HOST }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
      PASSPHRASE: ${{ secrets.PASSPHRASE }}

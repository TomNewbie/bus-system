name: Deploy to Streaming Server

on:
  workflow_call:
    inputs:
      DOCKER_IMAGE_NAME:
        description: docker image name
        required: true
        type: string
      CONTAINER_NAME:
        description: container name when start the container
        required: true
        type: string
      working-directory:
        description: directory to build and deploy
        required: true
        type: string
    secrets:
      HOST_SERVER:
        required: true
        description: IP address of the server
      DOCKER_USERNAME:
        required: true
        description: Docker username
      DOCKER_PASSWORD:
        required: true
      SSH_USERNAME:
        required: true
      SSH_KEY:
        required: true
      PASSPHRASE:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    env:
      DOCKER_IMAGE_VERSION: ${{ github.run_number }}-${{ github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: print env
        run: echo ${{ env.DOCKER_IMAGE_VERSION }}
        # Add support for more platforms with QEMU (optional)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and Push Docker Image
        run: |
          docker buildx create --use
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker buildx build \
          --output type=docker \
          -t ${{ secrets.DOCKER_USERNAME }}/${{ inputs.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_VERSION }} \
          -f Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ inputs.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_VERSION }}

      - name: SSH into Remote Server and Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ inputs.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_VERSION }}
            docker rm -f ${{ inputs.CONTAINER_NAME }} || true
            docker run -d --name ${{ inputs.CONTAINER_NAME }} ${{ secrets.DOCKER_USERNAME }}/${{ inputs.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_VERSION }}
